# Build the app and deploy on remote host

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        
      # Generate essential file from secrets
      - name: Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          # comma separated list of XML/JSON/YAML files in which tokens are to be substituted. Files names must be specified relative to the folder-path.
          files: ./src/backend/config/app_config.yml,./src/docker/docker-compose.yml
        env:
          # app_config.yml
          application_root: /api
          cors: false
          log_level: "INFO"
          listen_port: 8080
          mysql_host: mysql
          mysql_port: 3306
          mysql_database: ${{ secrets.MYSQL_DATABASE }}
          mysql_user: ${{ secrets.MYSQL_USER }}
          mysql_password: ${{ secrets.MYSQL_PASSWORD }}
          mysql_pool_size: 32
          # docker-compose.yml
          services.mysql.environment.MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          services.mysql.environment.MYSQL_ROOT_USER: ${{ secrets.MYSQL_USER }}
          services.mysql.environment.MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          
      - name: Create key file
        working-directory: ./src/
        shell: bash
        env:
          JWT_PUBKEY: ${{ secrets.JWT_PUBKEY }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
          DOMAIN_CERT_FULLCHAIN: ${{ secrets.DOMAIN_CERT_FULLCHAIN }}
          DOMAIN_CERT_KEY: ${{ secrets.DOMAIN_CERT_KEY }}
          #SSH_KEY: ${{ secrets.SSH_KEY }}
          #SSH_USER_HOST: ${{ secrets.SSH_USER_HOST }}
        run: |
          'echo "$JWT_PUBKEY" > ./backend/config/jwt/jwt.key.pub'
          'echo "$JWT_KEY" > ./backend/config/jwt/jwt.key'
          'echo "$DOMAIN_CERT_FULLCHAIN" > ./docker/config/cert/fullchain.cer'
          'echo "$DOMAIN_CERT_KEY" > ./docker/config/cert/key.pem'
      # Generate dist file for web app
      - name: Install node
        uses: actions/setup-node@v2
        
      - name: Build web
        working-directory: ./src/web
        run: |
          npm install
          npm build
      
      # Docker compose
      
